print("valid")
base$failure<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
b<-base %>% filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(-failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
print("valid")
base$pneumonia<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
c<-base %>% filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(-pneumonia,Hospital.Name)
print(c[1,])
}
}
best("TX", "heart attack")
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
print("valid")
base$attack<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
a<-base %>% filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(attack,Hospital.Name)
print(a[1,])
}
else if(outcome %in% c("heart failure")){
print("valid")
base$failure<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
b<-base %>% filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
print("valid")
base$pneumonia<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
c<-base %>% filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(pneumonia,Hospital.Name)
print(c[1,])
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
print("valid")
base$attack<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
a<-base %>% filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(attack,Hospital.Name)
print(a[1,])
}
else if(outcome %in% c("heart failure")){
print("valid")
base$failure<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
b<-base %>% filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
print("valid")
base$pneumonia<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
c<-base %>% filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(pneumonia,Hospital.Name)
print(c[1,])
}
}
best("TX", "heart attack")
base %>% filter(State=="TX") %>%  select(
Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
print("valid")
base$attack<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
a<-base %>% filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(-attack,Hospital.Name)
print(a[1,])
}
else if(outcome %in% c("heart failure")){
print("valid")
base$failure<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
b<-base %>% filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
print("valid")
base$pneumonia<-
as.numeric(as.character(base$"Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
c<-base %>% filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(pneumonia,Hospital.Name)
print(c[1,])
}
}
best("TX", "heart attack")
base %>% filter(State=="TX") %>%  select(
Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
base %>% filter(State=="TX") %>%  select(
Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(-Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
base %>% filter(State=="TX") %>%  select(
Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
base %>% filter(State=="TX") %>%  select(
Lowe.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
base %>% filter(State=="TX") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv", dec=".")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
print("valid")
base$attack<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
a<-base %>% filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(-attack,Hospital.Name)
print(a[1,])
}
else if(outcome %in% c("heart failure")){
print("valid")
base$failure<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
b<-base %>% filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(-failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
print("valid")
base$pneumonia<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
c<-base %>% filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(-pneumonia,Hospital.Name)
print(c[1,])
}
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
names(base)
base %>% filter(Hospital.Name=="CYPRESS FAIRBANKS MEDICAL CENTER") %>% select(
Upper.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State
)
base %>% filter(State=="TX") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
base %>% filter(State=="TX") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv", dec=".")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
base$attack<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
a<-base %>% filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(-attack,Hospital.Name)
print(a[1,])
}
else if(outcome %in% c("heart failure")){
print("valid")
base$failure<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
b<-base %>% filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(-failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
print("valid")
base$pneumonia<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
c<-base %>% filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(-pneumonia,Hospital.Name)
print(c[1,])
}
}
base %>% filter(State=="MD") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
class(base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
base$base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack<-as.numeric(as.character(base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
base %>% filter(State=="MD") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
class(base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack<-as.numeric(as.character(base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
base %>% filter(State=="MD") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
class(base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv", dec=".")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
base$attack<-as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
a<-base %>% filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(-attack,Hospital.Name)
print(a[1,])
print(class(base$attack))
}
else if(outcome %in% c("heart failure")){
print("valid")
base$failure<-as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
b<-base %>% filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(-failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
print("valid")
base$pneumonia<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
c<-base %>% filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(-pneumonia,Hospital.Name)
print(c[1,])
}
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
base %>% filter(State=="TX") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv", dec=".")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
a<-base %>% mutate(attack=as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")))
filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(-attack,Hospital.Name)
print(a[1,])
print(class(base$attack))
}
else if(outcome %in% c("heart failure")){
print("valid")
base$failure<-as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
b<-base %>% filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(-failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
print("valid")
base$pneumonia<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
c<-base %>% filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(-pneumonia,Hospital.Name)
print(c[1,])
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv", dec=".")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
a<-base %>% mutate(attack=as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))) %>%
filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(-attack,Hospital.Name)
print(a[1,])
print(class(base$attack))
}
else if(outcome %in% c("heart failure")){
print("valid")
base$failure<-as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
b<-base %>% filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(-failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
print("valid")
base$pneumonia<-
as.numeric(as.character(base$"Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
c<-base %>% filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(-pneumonia,Hospital.Name)
print(c[1,])
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
a<-base %>% mutate(attack=as.numeric(as.character("Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))) %>%
filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(-attack,Hospital.Name)
print(a[1,])
}
else if(outcome %in% c("heart failure")){
b<-base %>% mutate(failure=as.numeric(as.character("Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))) %>%
filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(-failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
c<-base %>% mutate(pneumonia=as.numeric(as.character("Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))) %>%
filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(-pneumonia,Hospital.Name)
print(c[1,])
}
}
best("TX", "heart attack")
best("TX", "heart failure")
as.numeric(as.character(base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
as.numeric(as.character(base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
a<-base %>% mutate(attack=as.numeric(as.character(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))) %>%
filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(-attack,Hospital.Name)
print(a[1,])
}
else if(outcome %in% c("heart failure")){
b<-base %>% mutate(failure=as.numeric(as.character(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))) %>%
filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(-failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
c<-base %>% mutate(pneumonia=as.numeric(as.character(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))) %>%
filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(-pneumonia,Hospital.Name)
print(c[1,])
}
}
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
## Programming Assignment 3
# R Programming
# Nicolás Ratto
#### load / install packages ####
packages = c("tidyverse", "lubridate","ggplot2","data.table","ggpubr","kableExtra")
## Now load or install & load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
#### download data ####
download.file("https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2FProgAssignment3-data.zip",
"ProgAssignment3-data.zip", method = "libcurl")
# unzip de data
unzip(zipfile = "ProgAssignment3-data.zip", exdir = getwd())
str(base)
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
## Programming Assignment 3
# R Programming
# Nicolás Ratto
#### load / install packages ####
packages = c("tidyverse", "lubridate","ggplot2","data.table","ggpubr","kableExtra")
## Now load or install & load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
#### download data ####
download.file("https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2FProgAssignment3-data.zip",
"ProgAssignment3-data.zip", method = "libcurl")
# unzip de data
unzip(zipfile = "ProgAssignment3-data.zip", exdir = getwd())
source("best.R")
best("TX", "heart attack")
hosp<-read.csv("hospital-data.csv")
str(hosp)
base <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(base)
base[, 11] <- as.numeric(base[, 11])
## You may get a warning about NAs being introduced; that is okay
hist(base[, 11])
base %>% filter(State=="TX") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack<-as.numeric(as.character(base$Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
base %>% filter(State=="TX") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best("TX", "heart attack")
base %>% filter(State=="TX") %>%  select(
Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
State,
Hospital.Name
) %>% arrange(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
best <- function(state, outcome) {
## Read outcome data
base <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if(!state %in% base$State){
print("invalid state")
} else if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
print("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else if(outcome %in% c("heart attack")){
a<-base %>% mutate(attack=as.numeric(as.character(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))) %>%
filter(!is.na(attack)&State==state) %>% select(State,Hospital.Name,attack) %>% arrange(attack,Hospital.Name)
print(a[1,])
}
else if(outcome %in% c("heart failure")){
b<-base %>% mutate(failure=as.numeric(as.character(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))) %>%
filter(!is.na(failure)&State==state) %>% select(State,Hospital.Name,failure) %>% arrange(failure,Hospital.Name)
print(b[1,])
}
else if (outcome %in% c("pneumonia")){
c<-base %>% mutate(pneumonia=as.numeric(as.character(Lower.Mortality.Estimate...Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))) %>%
filter(!is.na(pneumonia)&State==state) %>% select(State,Hospital.Name,pneumonia) %>% arrange(pneumonia,Hospital.Name)
print(c[1,])
}
}
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
